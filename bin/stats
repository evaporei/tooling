#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative './utils.rb'

FIXNUM_MAX = (2**(0.size * 8 - 2) - 1)
FIXNUM_MIN = -(2**(0.size * 8 - 2))

def main
  silent = ARGV[0] == '-s'
  window = {
    count: 0,
    sum: 0,
    average: 0,
    min: FIXNUM_MAX,
    max: FIXNUM_MIN,
    floating_point: false
  }

  argument_reader do |argument|
    window[:floating_point] = true if argument.include? '.'

    value = window[:floating_point] ? argument.to_f : argument.to_i

    window[:count] += 1
    window[:sum] += value
    window[:average] = window[:sum] / window[:count]
    window[:min] = value if value < window[:min]
    window[:max] = value if value > window[:max]

    puts argument unless silent

    # TODO: Print & rest at X interval of time, so never ending process can see stats being print out
  end

  puts '' unless silent

  puts '## Stats'
  puts " Count: #{window[:count]}"
  puts " Sum: #{window[:sum]}"
  puts " Average: #{window[:average]}"
  puts " Min: #{window[:min]}"
  puts " Max: #{window[:max]}"
end

main
